prototype(Neos.NodeTypes:Menu) {
	templatePath = 'resource://mkuhlmann.ImpfDich/Private/Templates/NodeTypes/NeosMenu.html'
}



prototype(Neos.NodeTypes:Image) {
	maximumWidth = ${q(node).property('scaleWidth') && q(node).property('scaleWidth') != 0 ? q(node).property('scaleWidth') : null}
	maximumHeight = ${q(node).property('scaleHeight') && q(node).property('scaleHeight') != 0 ? q(node).property('scaleHeight') : null}

}

prototype(Neos.NodeTypes:Text) {
    attributes.class = 'content'
}

prototype(Neos.NodeTypes:TextWithImage) {
    attributes.class = 'content'
}

prototype(mkuhlmann.ImpfDich:Divider) < prototype(Neos.Fusion:Component) {
	renderer = afx`
	<hr/>
	`
}

prototype(Neos.NodeTypes:Divider) < prototype(Neos.Neos:Content) {
    templatePath = 'resource://mkuhlmann.ImpfDich/Private/Templates/NodeTypes/Divider.html'
}



prototype(Neos.NodeTypes:Headline) {
    attributes.class = 'content'
}

/*
Neos.NodeTypes.ColumnLayouts
*/
prototype(Neos.NodeTypes.ColumnLayouts:MultiColumn) {
	attributes.class = 'columns'
	columns.iterationName = 'multiColumnIteration'
}

prototype(Neos.NodeTypes.ColumnLayouts:MultiColumnItem) {
	attributes.class = ${'column is-' + String.split(q(node).parent().property('layout'), '-')[multiColumnIteration.index]}
}
